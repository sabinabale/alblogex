generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id           String        @id
  name         String
  email        String        @unique
  password     String
  createdAt    DateTime      @default(now())
  role         Role          @default(USER)
  posts        Post[]
  comments     Comment[]
  commentVotes CommentVote[]
}

model Post {
  id        Int         @id @default(autoincrement())
  title     String
  content   String
  imageUrl  String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  author    User        @relation(fields: [authorId], references: [id])
  authorId  String
  comments  Comment[]
  images    PostImage[]
}

model Comment {
  id        Int           @id @default(autoincrement())
  content   String
  post      Post          @relation(fields: [postId], references: [id])
  postId    Int
  author    User          @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  votes     CommentVote[]
}

model CommentVote {
  id        Int      @id @default(autoincrement())
  value     Int
  comment   Comment  @relation(fields: [commentId], references: [id])
  commentId Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([commentId, userId])
}

model PostImage {
  id        Int      @id @default(autoincrement())
  url       String
  fileName  String
  altText   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int      @unique
}
